<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.album.dao.AlbumDao">

    <resultMap type="com.example.album.entity.Album" id="AlbumMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="addTime" column="add_time" jdbcType="TIMESTAMP"/>
        <result property="category" column="category" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AlbumMap">
        select
          *

        from album.album
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AlbumMap">
        select
          *

        from album.album
        limit #{offset}, #{limit}
    </select>

    <!--查询指定行数据-->
    <select id="queryByUserId" resultMap="AlbumMap">
        select
          *

        from album.album
        inner join user_album ua on album.id = ua.album_id
        where ua.user_id = #{userId}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AlbumMap">
        select
          *

        from album.album
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="addTime != null">
                and add_time = #{addTime}
            </if>
            <if test="category != null">
                and category = #{category}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into album.album(user_id, password, name , category, type)
        values (#{userId}, #{password}, #{name} , #{category}, #{type})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update album.album
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from album.album where id = #{id}
    </delete>

    <select id="getRecentUpdateInfo" resultType="com.example.album.domain.AlbumUpdateInfo">
        select
        u.username, t1.name as `albumName`
        from album as t1
        inner join album_image ai on t1.id = ai.album_id
        inner join user_album ua on t1.id = ua.album_id
        inner join user u on ua.user_id = u.id
        where u.id = #{userId} and t1.type = 2
        order by ai.update_time desc
        limit 1;

    </select>

</mapper>